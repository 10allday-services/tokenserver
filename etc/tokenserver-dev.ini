# application configuration
[global]
logger_name = tokenserver
debug = true

# token server configuration
[token]
service_entry = http://example.com


# Paster configuration for Pyramid
[filter:catcherror]
paste.filter_app_factory = mozsvc.middlewares:make_err_mdw

[pipeline:main]
pipeline = catcherror
           pyramidapp

[app:pyramidapp]
use = egg:tokenserver

pyramid.reload_templates = true
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en
pyramid.includes = pyramid_debugtoolbar

# need to do this programmatically
mako.directories = cornice:templates


[server:main]
use = egg:Paste#http
host = 0.0.0.0
port = 5000

# Begin logging configuration

[loggers]
keys = root, tokenserver

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = console

[logger_tokenserver]
level = DEBUG
handlers =
qualname = tokenserver

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

# End logging configuration

# repoze.who config
# These settings get used when you config.include("pyramid_whoauth")
[who:plugin:vepauth]
use = repoze.who.plugins.vepauth:make_plugin
audiences = *
token_url = /1.0/{application}/token
token_manager = tokenserver:NodeTokenManager
token_manager_secret = TED KOPPEL IS A ROBOT
token_manager_applications = sync

[who:general]
request_classifier = repoze.who.classifiers:default_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider
remote_user_key = REMOTE_USER

[who:identifiers]
plugins = vepauth

[who:authenticators]
plugins = vepauth

[who:challengers]
plugins = vepauth

[who:mdproviders]
plugins =


